{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5c53f113",
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing the required library\n",
    "from selenium import webdriver\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ed1fa09e",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cars24_search(search_term,location):\n",
    "    \"\"\"Generate a URL for search term with location\"\"\"\n",
    "    \n",
    "    LOC = {'Delhi': '110001', 'Noida': '201301', 'Gurgoan': '122001', 'Mumbai' : '400001', 'Pune': '411001', \n",
    "           'Banglore': '560001','Hyderabad': '500001', 'Chennai': '600001', 'Kolkata': '700001', 'Ahmedabad': '380001' }\n",
    "    \n",
    "    search_term = search_term.replace(' ','%20')\n",
    "    template = f'https://www.cars24.com/buy-used-car?sort=P&search={search_term}&storeCityId=8597&pinId={LOC[location]}'\n",
    "    \n",
    "    return template"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0725dca7",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cars24_scrapping():\n",
    "    \"\"\" \n",
    "    Function to scrap datas from cars 24.\n",
    "    \n",
    "    \"\"\"\n",
    "      \n",
    "    print(\"SCRAPPING THE REQUIRED DETAILS\")\n",
    "    driver = webdriver.Chrome()\n",
    "    driver.maximize_window()\n",
    "    \n",
    "    LOC = {'Delhi': '110001', 'Noida': '201301', 'Gurgoan': '122001', 'Mumbai' : '400001', 'Pune': '411001', \n",
    "           'Banglore': '560001','Hyderabad': '500001', 'Chennai': '600001', 'Kolkata': '700001', 'Ahmedabad': '380001' }\n",
    "    \n",
    "    location = [keys for keys in LOC.keys()]\n",
    "    \n",
    "    CARS= ['SUV', 'Sedan', 'Hatchback', 'Luxury Sedan', 'Luxury SUV']\n",
    "    \n",
    "    URL = [cars24_search(j,i) for i in location for j in CARS]\n",
    "    \n",
    "    LOCATION = []\n",
    "    MNF_YEAR = []\n",
    "    BRAND = []\n",
    "    MODEL = []\n",
    "    VARIANT = []\n",
    "    driven_KM = []\n",
    "    NOOF_owners = []\n",
    "    fuel_type = []\n",
    "    PRIZE = []\n",
    "\n",
    "\n",
    "    for i in URL:\n",
    "        driver.get(i)\n",
    "        driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n",
    "        \n",
    "        time.sleep(10)\n",
    "\n",
    "        soup = BeautifulSoup(driver.page_source, 'html.parser')\n",
    "        results = soup.find_all('div',{'class' : '_1l4fi'})\n",
    "\n",
    "        description = []\n",
    "        description1 = []\n",
    "        description2 = []\n",
    "        price = []\n",
    "    \n",
    "        for i in results:\n",
    "            description.append(i.find('h2', {'class': \"_3FpCg\"}).text)\n",
    "            description1.append(i.find('p', {'class': \"cvakB\"}).text)\n",
    "            description2.append(i.find('ul', {'class': \"bVR0c\"},'li').text)\n",
    "            price.append(i.find('div', {'class': \"_7udZZ\"}).text)\n",
    "            LOCATION.append(driver.find_element_by_xpath(\"//p[@class='_1OR7d']/label\").text)\n",
    "    \n",
    "    \n",
    "        year = [i.split(' ',2)[0] for i in description]\n",
    "        brand = [i.split(' ',2)[1] for i in description]\n",
    "        D1= [i.split(' ',2)[-1] for i in description]\n",
    "\n",
    "        for i in price:\n",
    "            PRIZE.append(i)\n",
    "\n",
    "        for i in year:\n",
    "            MNF_YEAR.append(i)\n",
    "        for i in brand:\n",
    "            BRAND.append(i)\n",
    "    \n",
    "        D2 = [i.rsplit(' ',1)[0] for i in description1]\n",
    "        variant = [i.split(' ') [-1]for i in description1]\n",
    "        for i in variant:\n",
    "            VARIANT.append(i)\n",
    "    \n",
    "        D3 = [D1[i]+' '+D2[i] for i in range(0,len(D1))]\n",
    "    \n",
    "        for i in D3:\n",
    "            MODEL.append(i)\n",
    "    \n",
    "        dummy1 = [i.split('km')[-1]for i in description2]\n",
    "        kms = [i.split('km')[0] for i in description2]\n",
    "        kms = [i+'km' for i in kms]\n",
    "\n",
    "        owners = [i.split('Owner')[0] for i in dummy1]\n",
    "        owners = [i+'Owner' for i in owners]\n",
    "        fuel = [i.split('Owner')[-1] for i in dummy1]\n",
    "\n",
    "        for i in kms:\n",
    "            driven_KM.append(i)\n",
    "\n",
    "        for i in owners:\n",
    "            NOOF_owners.append(i)\n",
    "\n",
    "        for i in fuel:\n",
    "            fuel_type.append(i)\n",
    "\n",
    "    driver.close()\n",
    "        \n",
    "    used_cars = pd.DataFrame({\"LOCATION\" : LOCATION,\n",
    "                              \"MNF_YEAR\" : MNF_YEAR,\n",
    "                              \"BRAND\" : BRAND,\n",
    "                              \"MODEL\" : MODEL,\n",
    "                              \"VARIANT\" : VARIANT,\n",
    "                              \"DRIVEN_KM\" : driven_KM,\n",
    "                              \"FUELTYPE\" : fuel_type,\n",
    "                              \"NOOF_OWNERS\" : NOOF_owners,\n",
    "                              \"PRICE\" : PRIZE\n",
    "                             })\n",
    "    \n",
    "    used_cars.to_csv(\"used_cars.csv\",index=False) #Creating CSV\n",
    "    print(\"SCRAPPED DETAILS ARE STORED AS 'used_cars.csv'\")\n",
    "    \n",
    "    return used_cars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "488644c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SCRAPPING THE REQUIRED DETAILS\n",
      "SCRAPPED DETAILS ARE STORED AS 'used_cars.csv'\n"
     ]
    }
   ],
   "source": [
    "user_cars = cars24_scrapping()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c37c8532",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LOCATION</th>\n",
       "      <th>MNF_YEAR</th>\n",
       "      <th>BRAND</th>\n",
       "      <th>MODEL</th>\n",
       "      <th>VARIANT</th>\n",
       "      <th>DRIVEN_KM</th>\n",
       "      <th>FUELTYPE</th>\n",
       "      <th>NOOF_OWNERS</th>\n",
       "      <th>PRICE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>New Delhi</td>\n",
       "      <td>2012</td>\n",
       "      <td>Maruti</td>\n",
       "      <td>Ertiga VXI</td>\n",
       "      <td>Manual</td>\n",
       "      <td>37,786 km</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>1st Owner</td>\n",
       "      <td>₹4,15,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>New Delhi</td>\n",
       "      <td>2014</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Ecosport 1.5 TREND TDCI</td>\n",
       "      <td>Manual</td>\n",
       "      <td>47,562 km</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>2nd Owner</td>\n",
       "      <td>₹3,99,142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>New Delhi</td>\n",
       "      <td>2015</td>\n",
       "      <td>Honda</td>\n",
       "      <td>Mobilio 1.5 S I DTEC</td>\n",
       "      <td>Manual</td>\n",
       "      <td>52,945 km</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>1st Owner</td>\n",
       "      <td>₹4,55,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>New Delhi</td>\n",
       "      <td>2019</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>Innova Crysta 2.4 VX 7 STR</td>\n",
       "      <td>Manual</td>\n",
       "      <td>31,235 km</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>1st Owner</td>\n",
       "      <td>₹18,00,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>New Delhi</td>\n",
       "      <td>2019</td>\n",
       "      <td>Maruti</td>\n",
       "      <td>Ertiga ZDI PLUS</td>\n",
       "      <td>Manual</td>\n",
       "      <td>30,079 km</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>1st Owner</td>\n",
       "      <td>₹10,00,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14970</th>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>2019</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Ecosport 1.5TITANIUM TDCI</td>\n",
       "      <td>Manual</td>\n",
       "      <td>49,191 km</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>1st Owner</td>\n",
       "      <td>₹8,23,399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14971</th>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>2016</td>\n",
       "      <td>Hyundai</td>\n",
       "      <td>Creta 1.6 SX CRDI</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1,32,350 km</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>2nd Owner</td>\n",
       "      <td>₹8,99,099</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14972</th>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>2018</td>\n",
       "      <td>Hyundai</td>\n",
       "      <td>Creta 1.6 SX AT PETROL</td>\n",
       "      <td>Manual</td>\n",
       "      <td>27,656 km</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>1st Owner</td>\n",
       "      <td>₹13,19,599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14973</th>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>2019</td>\n",
       "      <td>Honda</td>\n",
       "      <td>WR-V 1.5 i-DTEC VX MT</td>\n",
       "      <td>Manual</td>\n",
       "      <td>62,086 km</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>1st Owner</td>\n",
       "      <td>₹7,72,299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14974</th>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>2017</td>\n",
       "      <td>Maruti</td>\n",
       "      <td>Eeco 5 STR</td>\n",
       "      <td>Manual</td>\n",
       "      <td>67,514 km</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>1st Owner</td>\n",
       "      <td>₹2,98,299</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>14975 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        LOCATION MNF_YEAR    BRAND                       MODEL VARIANT  \\\n",
       "0      New Delhi     2012   Maruti                  Ertiga VXI  Manual   \n",
       "1      New Delhi     2014     Ford     Ecosport 1.5 TREND TDCI  Manual   \n",
       "2      New Delhi     2015    Honda        Mobilio 1.5 S I DTEC  Manual   \n",
       "3      New Delhi     2019   Toyota  Innova Crysta 2.4 VX 7 STR  Manual   \n",
       "4      New Delhi     2019   Maruti             Ertiga ZDI PLUS  Manual   \n",
       "...          ...      ...      ...                         ...     ...   \n",
       "14970  Ahmedabad     2019     Ford   Ecosport 1.5TITANIUM TDCI  Manual   \n",
       "14971  Ahmedabad     2016  Hyundai           Creta 1.6 SX CRDI  Manual   \n",
       "14972  Ahmedabad     2018  Hyundai      Creta 1.6 SX AT PETROL  Manual   \n",
       "14973  Ahmedabad     2019    Honda       WR-V 1.5 i-DTEC VX MT  Manual   \n",
       "14974  Ahmedabad     2017   Maruti                  Eeco 5 STR  Manual   \n",
       "\n",
       "         DRIVEN_KM FUELTYPE NOOF_OWNERS       PRICE  \n",
       "0        37,786 km   Petrol   1st Owner   ₹4,15,000  \n",
       "1        47,562 km   Diesel   2nd Owner   ₹3,99,142  \n",
       "2        52,945 km   Diesel   1st Owner   ₹4,55,000  \n",
       "3        31,235 km   Diesel   1st Owner  ₹18,00,000  \n",
       "4        30,079 km   Diesel   1st Owner  ₹10,00,000  \n",
       "...            ...      ...         ...         ...  \n",
       "14970    49,191 km   Diesel   1st Owner   ₹8,23,399  \n",
       "14971  1,32,350 km   Diesel   2nd Owner   ₹8,99,099  \n",
       "14972    27,656 km   Petrol   1st Owner  ₹13,19,599  \n",
       "14973    62,086 km   Diesel   1st Owner   ₹7,72,299  \n",
       "14974    67,514 km   Petrol   1st Owner   ₹2,98,299  \n",
       "\n",
       "[14975 rows x 9 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "user_cars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "acd41b3a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "90872c74",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
